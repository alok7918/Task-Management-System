{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task Management System\\\\frontend\\\\src\\\\Components\\\\priorList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./priorList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Prioritylist = () => {\n  _s();\n  const [taskData, setTaskData] = useState([]);\n  const loadData = () => {\n    axios.get(\"http://localhost:8000/task/Display\").then(res => {\n      setTaskData(res.data);\n    });\n  };\n  useEffect(() => {\n    loadData();\n  }, []);\n  const moveTask = (dragIndex, hoverIndex, priority) => {\n    const updatedTaskData = [...taskData];\n    const draggedTask = updatedTaskData[dragIndex];\n\n    // Remove the task from its original position\n    updatedTaskData.splice(dragIndex, 1);\n    // Insert the task into the new position\n    updatedTaskData.splice(hoverIndex, 0, draggedTask);\n\n    // Update the priority of tasks if moved across priority lists\n    updatedTaskData.forEach((task, index) => {\n      if (task.priority !== priority) {\n        task.priority = priority;\n      }\n    });\n    setTaskData(updatedTaskData);\n  };\n  const handleDragStart = (e, index, priority) => {\n    e.dataTransfer.setData(\"index\", index);\n    e.dataTransfer.setData(\"priority\", priority);\n  };\n  const handleDragOver = (e, priority) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const dragIndex = Number(e.dataTransfer.getData(\"index\"));\n    const dragPriority = e.dataTransfer.getData(\"priority\");\n    if (dragPriority !== priority) {\n      moveTask(dragIndex, taskData.length, priority);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"priority\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prioritybox\",\n      onDragOver: e => handleDragOver(e, \"High\"),\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"High Priority\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), taskData.map((task, index) => {\n        if (task.priority === \"High\") {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            draggable: true,\n            onDragStart: e => handleDragStart(e, index, \"High\"),\n            className: \"task\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this);\n        }\n        return null;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prioritybox\",\n      onDragOver: e => handleDragOver(e, \"Medium\"),\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"orange\"\n        },\n        children: \"Medium Priority\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), taskData.map((task, index) => {\n        if (task.priority === \"Medium\") {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            draggable: true,\n            onDragStart: e => handleDragStart(e, index, \"Medium\"),\n            className: \"task\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this);\n        }\n        return null;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prioritybox\",\n      onDragOver: e => handleDragOver(e, \"Low\"),\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"green\"\n        },\n        children: \"Low Priority\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), taskData.map((task, index) => {\n        if (task.priority === \"Low\") {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            draggable: true,\n            onDragStart: e => handleDragStart(e, index, \"Low\"),\n            className: \"task\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this);\n        }\n        return null;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(Prioritylist, \"eemZByNl+4kuA59yqHb1n9INJDc=\");\n_c = Prioritylist;\nexport default Prioritylist;\nvar _c;\n$RefreshReg$(_c, \"Prioritylist\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","Prioritylist","_s","taskData","setTaskData","loadData","get","then","res","data","moveTask","dragIndex","hoverIndex","priority","updatedTaskData","draggedTask","splice","forEach","task","index","handleDragStart","e","dataTransfer","setData","handleDragOver","preventDefault","stopPropagation","Number","getData","dragPriority","length","className","children","onDragOver","style","color","fileName","_jsxFileName","lineNumber","columnNumber","map","draggable","onDragStart","title","description","_c","$RefreshReg$"],"sources":["D:/Task Management System/frontend/src/Components/priorList.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./priorList.css\";\r\n\r\nconst Prioritylist = () => {\r\n    const [taskData, setTaskData] = useState([]);\r\n\r\n    const loadData = () => {\r\n        axios.get(\"http://localhost:8000/task/Display\").then((res) => {\r\n            setTaskData(res.data);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, []);\r\n\r\n    const moveTask = (dragIndex, hoverIndex, priority) => {\r\n        const updatedTaskData = [...taskData];\r\n        const draggedTask = updatedTaskData[dragIndex];\r\n\r\n        // Remove the task from its original position\r\n        updatedTaskData.splice(dragIndex, 1);\r\n        // Insert the task into the new position\r\n        updatedTaskData.splice(hoverIndex, 0, draggedTask);\r\n        \r\n        // Update the priority of tasks if moved across priority lists\r\n        updatedTaskData.forEach((task, index) => {\r\n            if (task.priority !== priority) {\r\n                task.priority = priority;\r\n            }\r\n        });\r\n\r\n        setTaskData(updatedTaskData);\r\n    };\r\n\r\n    const handleDragStart = (e, index, priority) => {\r\n        e.dataTransfer.setData(\"index\", index);\r\n        e.dataTransfer.setData(\"priority\", priority);\r\n    };\r\n\r\n    const handleDragOver = (e, priority) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const dragIndex = Number(e.dataTransfer.getData(\"index\"));\r\n        const dragPriority = e.dataTransfer.getData(\"priority\");\r\n        if (dragPriority !== priority) {\r\n            moveTask(dragIndex, taskData.length, priority);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"priority\">\r\n            <div className=\"prioritybox\" onDragOver={(e) => handleDragOver(e, \"High\")}>\r\n                <h1 style={{ color: \"red\" }}>High Priority</h1>\r\n                {taskData.map((task, index) => {\r\n                    if (task.priority === \"High\") {\r\n                        return (\r\n                            <div\r\n                                key={index}\r\n                                draggable\r\n                                onDragStart={(e) => handleDragStart(e, index, \"High\")}\r\n                                className=\"task\"\r\n                            >\r\n                                <span>{task.title}</span>\r\n                                <span>{task.description}</span>\r\n                            </div>\r\n                        );\r\n                    }\r\n                    return null;\r\n                })}\r\n            </div>\r\n            <div className=\"prioritybox\" onDragOver={(e) => handleDragOver(e, \"Medium\")}>\r\n                <h1 style={{ color: \"orange\" }}>Medium Priority</h1>\r\n                {taskData.map((task, index) => {\r\n                    if (task.priority === \"Medium\") {\r\n                        return (\r\n                            <div\r\n                                key={index}\r\n                                draggable\r\n                                onDragStart={(e) => handleDragStart(e, index, \"Medium\")}\r\n                                className=\"task\"\r\n                            >\r\n                                <span>{task.title}</span>\r\n                                <span>{task.description}</span>\r\n                            </div>\r\n                        );\r\n                    }\r\n                    return null;\r\n                })}\r\n            </div>\r\n            <div className=\"prioritybox\" onDragOver={(e) => handleDragOver(e, \"Low\")}>\r\n                <h1 style={{ color: \"green\" }}>Low Priority</h1>\r\n                {taskData.map((task, index) => {\r\n                    if (task.priority === \"Low\") {\r\n                        return (\r\n                            <div\r\n                                key={index}\r\n                                draggable\r\n                                onDragStart={(e) => handleDragStart(e, index, \"Low\")}\r\n                                className=\"task\"\r\n                            >\r\n                                <span>{task.title}</span>\r\n                                <span>{task.description}</span>\r\n                            </div>\r\n                        );\r\n                    }\r\n                    return null;\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Prioritylist;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}