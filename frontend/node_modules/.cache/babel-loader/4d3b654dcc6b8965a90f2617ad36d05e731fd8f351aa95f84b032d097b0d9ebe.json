{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task Management System\\\\frontend\\\\src\\\\Components\\\\Display.js\",\n  _s = $RefreshSig$();\n// import { useState,useEffect } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\"\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// const Display=()=>{\n\n//   const mynav=useNavigate()\n//   const[taskData,setTaskData]=useState([])\n\n//   const [currentPage,setCurrentPage]= useState(1);\n//   const recordsperPage=5;\n//   const lastIndex = currentPage * recordsperPage;\n//   const firstIndex= lastIndex - recordsperPage;\n//   const records= taskData.slice(firstIndex,lastIndex);\n//   const npage= Math.ceil(taskData.length / recordsperPage);\n\n//   const numbers= [...Array(npage + 1).keys()].slice(1);\n\n//   const prevPage=()=>{\n//     if(currentPage!== 1){\n//       setCurrentPage(currentPage-1);\n//     }\n//   }\n\n//   const nextPage=()=>{\n//     if(currentPage!== npage){\n//       setCurrentPage(currentPage+1);\n//     }\n//   }\n\n//   const changeCPage=(id)=>{\n//     setCurrentPage(id);\n//   }\n\n//   const loadData=()=>{\n//           axios.get(\"http://localhost:8000/task/Display\").then((res)=>{\n//           setTaskData(res.data)\n//           })\n//   }\n\n//       useEffect(()=>{\n//           loadData()\n//       },[])\n\n//       const handleToggleStatus = async (id, status) => {\n//           try {\n//             const newStatus = status === 'pending' ? 'completed': 'pending';\n//             const updatedTodo = await axios.put(`http://localhost:8000/task/Display/${id}`, { status: newStatus });\n//             setTaskData(taskData.map(todo => (todo._id === id ? updatedTodo.data : todo)));\n//           } catch (error) {\n//             console.error(error);\n//           }\n//         };\n\n//         const del = (id) => {\n\n//           const confirmDelete = window.confirm(\"Are you sure you want to delete this item?\");\n\n//           if (confirmDelete) {\n\n//               const url = \"http://localhost:8000/task/Delete\";\n\n//               axios.post(url, { id: id })\n//                   .then((res) => {\n\n//                       loadData();\n//                   })\n//                   .catch((error) => {\n//                       console.error(\"Error deleting item:\", error);\n//                   });\n//           }\n//       };\n\n//       const edit=(id)=>{\n\n//           mynav(\"/edit/\"+id); \n\n//       }    \n\n//         const descriptionHere = ( description,date, descriptiondetail ) => {\n//       mynav(`/Des/${description}/${date}/${descriptiondetail}`);\n//     };\n\n//   const mydata=records.map((key, index) => {\n\n//     return(\n//       <>\n\n//                     <tbody>\n//                       <tr>\n\n//                         <td> { key.title}</td>\n//                         <td  onClick={()=>descriptionHere(key.description, key.date, key.descriptiondetail)}>{key.description}</td>\n//                         <td> {key.date}</td>\n\n//                         <td> \n//                         <div style={{display:\"flex\"}} >\n//                          {key.status}\n//                           <button  onClick={() => handleToggleStatus(key._id, key.status)} class=\"button\" style={{\"--clr\": \"#00ad54\"}}>\n//                                   <span ></span>\n//                                   <div >\n//                                       <div >\n//                                       <i  ></i>\n//                                       </div>\n//                                       <span>Status</span>\n//                                   </div>\n//                               </button>\n//                           </div></td>\n//                       <td><button onClick={()=>{edit(key._id)}} ><i  style={{color: \"#000000\"}}></i></button></td>\n//                       <td><button onClick={()=>{del(key._id)}}><i  style={{color: \"#000000\"}}></i></button></td>\n\n//                   </tr>\n\n//               </tbody>\n\n//       </>\n//     )\n\n//   })\n\n//       return(\n//           <>\n//           <center>\n//             <h1  >Assigned Tasks</h1> </center>\n//             <div  >\n//                 <div  style={{width:\"80%\",margin:\"auto\"}}>\n\n//                         <table class=\"table\">\n//                             <thead style={{color:\"white\",backgroundColor:\"#212529\"}}>\n//                                 <tr>\n//                                 <th>Title</th>\n//                                 <th style={{width:\" 150px\",height: \"40px\"}}>description</th>\n//                                 <th>date</th>\n//                                 <th>status</th>\n//                                 <th>Edit</th>\n//                                 <th>Delete</th>\n//                                 </tr>\n//                             </thead>\n//                       {mydata}   \n//               </table>\n\n//                       <nav>\n//                         <ul className=\"pagination\">\n//                             <li className=\"page-item\">\n//                                 <a href=\"#\" className=\"page-link\" onClick={prevPage}>Prev</a>\n//                             </li>\n//                             {\n//                               numbers.map((n,i)=>(\n//                                 <li className={`page-item ${currentPage===n ? 'active':''}`} key={i}>\n//                                     <a href=\"#\" className=\"page-link\" onClick={()=>{changeCPage(n)}} >{n}</a>\n//                                 </li>\n//                               ))\n//                             }\n//                             <li className=\"page-item\">\n//                                 <a href=\"#\" className=\"page-link\" onClick={nextPage}>Next</a>\n//                             </li>\n//                         </ul>\n//                       </nav>\n//               </div>\n//             </div>\n\n//                   <div style={{margin:\"100px\",padding:\"20px\"}}> \n\n//                   </div>\n\n//   </> \n// )}       \n\n// export default Display;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport Checkbox from '@mui/material/Checkbox';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport { visuallyHidden } from '@mui/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction createData(id, name, calories, fat, carbs, protein) {\n  return {\n    id,\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\nconst rows = [createData(1, 'Cupcake', 305, 3.7, 67, 4.3), createData(2, 'Donut', 452, 25.0, 51, 4.9), createData(3, 'Eclair', 262, 16.0, 24, 6.0), createData(4, 'Frozen yoghurt', 159, 6.0, 24, 4.0), createData(5, 'Gingerbread', 356, 16.0, 49, 3.9), createData(6, 'Honeycomb', 408, 3.2, 87, 6.5), createData(7, 'Ice cream sandwich', 237, 9.0, 37, 4.3), createData(8, 'Jelly Bean', 375, 0.0, 94, 0.0), createData(9, 'KitKat', 518, 26.0, 65, 7.0), createData(10, 'Lollipop', 392, 0.2, 98, 0.0), createData(11, 'Marshmallow', 318, 0, 81, 2.0), createData(12, 'Nougat', 360, 19.0, 9, 37.0), createData(13, 'Oreo', 437, 18.0, 63, 4.0)];\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// Since 2020 all major browsers ensure sort stability with Array.prototype.sort().\n// stableSort() brings sort stability to non-modern browsers (notably IE11). If you\n// only support modern browsers you can replace stableSort(exampleArray, exampleComparator)\n// with exampleArray.slice().sort(exampleComparator)\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\nconst headCells = [{\n  id: 'name',\n  numeric: false,\n  disablePadding: true,\n  label: 'Dessert (100g serving)'\n}, {\n  id: 'calories',\n  numeric: true,\n  disablePadding: false,\n  label: 'Calories'\n}, {\n  id: 'fat',\n  numeric: true,\n  disablePadding: false,\n  label: 'Fat (g)'\n}, {\n  id: 'carbs',\n  numeric: true,\n  disablePadding: false,\n  label: 'Carbs (g)'\n}, {\n  id: 'protein',\n  numeric: true,\n  disablePadding: false,\n  label: 'Protein (g)'\n}];\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: \"primary\",\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: rowCount > 0 && numSelected === rowCount,\n          onChange: onSelectAllClick,\n          inputProps: {\n            'aria-label': 'select all desserts'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), headCells.map(headCell => /*#__PURE__*/_jsxDEV(TableCell, {\n        align: headCell.numeric ? 'right' : 'left',\n        padding: headCell.disablePadding ? 'none' : 'normal',\n        sortDirection: orderBy === headCell.id ? order : false,\n        children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n          active: orderBy === headCell.id,\n          direction: orderBy === headCell.id ? order : 'asc',\n          onClick: createSortHandler(headCell.id),\n          children: [headCell.label, orderBy === headCell.id ? /*#__PURE__*/_jsxDEV(Box, {\n            component: \"span\",\n            sx: visuallyHidden,\n            children: order === 'desc' ? 'sorted descending' : 'sorted ascending'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this)\n      }, headCell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 323,\n    columnNumber: 5\n  }, this);\n}\n_c = EnhancedTableHead;\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nfunction EnhancedTableToolbar(props) {\n  const {\n    numSelected\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Toolbar, {\n    sx: {\n      pl: {\n        sm: 2\n      },\n      pr: {\n        xs: 1,\n        sm: 1\n      },\n      ...(numSelected > 0 && {\n        bgcolor: theme => alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity)\n      })\n    },\n    children: [numSelected > 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        flex: '1 1 100%'\n      },\n      color: \"inherit\",\n      variant: \"subtitle1\",\n      component: \"div\",\n      children: [numSelected, \" selected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        flex: '1 1 100%'\n      },\n      variant: \"h6\",\n      id: \"tableTitle\",\n      component: \"div\",\n      children: \"Nutrition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 9\n    }, this), numSelected > 0 ? /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Delete\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Filter list\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(FilterListIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 375,\n    columnNumber: 5\n  }, this);\n}\n_c2 = EnhancedTableToolbar;\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nexport default function EnhancedTable() {\n  _s();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelected = rows.map(n => n.id);\n      setSelected(newSelected);\n      return;\n    }\n    setSelected([]);\n  };\n  const handleClick = (event, id) => {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n  const isSelected = id => selected.indexOf(id) !== -1;\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n  const visibleRows = React.useMemo(() => stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage), [order, orderBy, page, rowsPerPage]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: '100%',\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(EnhancedTableToolbar, {\n        numSelected: selected.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 750\n          },\n          \"aria-labelledby\": \"tableTitle\",\n          size: dense ? 'small' : 'medium',\n          children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n            numSelected: selected.length,\n            order: order,\n            orderBy: orderBy,\n            onSelectAllClick: handleSelectAllClick,\n            onRequestSort: handleRequestSort,\n            rowCount: rows.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [visibleRows.map((row, index) => {\n              const isItemSelected = isSelected(row.id);\n              const labelId = `enhanced-table-checkbox-${index}`;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                onClick: event => handleClick(event, row.id),\n                role: \"checkbox\",\n                \"aria-checked\": isItemSelected,\n                tabIndex: -1,\n                selected: isItemSelected,\n                sx: {\n                  cursor: 'pointer'\n                },\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  padding: \"checkbox\",\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    color: \"primary\",\n                    checked: isItemSelected,\n                    inputProps: {\n                      'aria-labelledby': labelId\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 531,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 530,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  id: labelId,\n                  scope: \"row\",\n                  padding: \"none\",\n                  children: row.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.calories\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.fat\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.carbs\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.protein\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 21\n                }, this)]\n              }, row.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 19\n              }, this);\n            }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n              style: {\n                height: (dense ? 33 : 53) * emptyRows\n              },\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 6\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: dense,\n        onChange: handleChangeDense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 18\n      }, this),\n      label: \"Dense padding\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 497,\n    columnNumber: 5\n  }, this);\n}\n_s(EnhancedTable, \"uk+wwK3V0euVGklWP429GjxtIww=\");\n_c3 = EnhancedTable;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"EnhancedTableHead\");\n$RefreshReg$(_c2, \"EnhancedTableToolbar\");\n$RefreshReg$(_c3, \"EnhancedTable\");","map":{"version":3,"names":["React","PropTypes","alpha","Box","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","FormControlLabel","Switch","FilterListIcon","visuallyHidden","jsxDEV","_jsxDEV","createData","id","name","calories","fat","carbs","protein","rows","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","numeric","disablePadding","label","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","children","padding","color","indeterminate","checked","onChange","inputProps","fileName","_jsxFileName","lineNumber","columnNumber","headCell","align","sortDirection","active","direction","onClick","component","sx","_c","propTypes","number","isRequired","func","oneOf","string","EnhancedTableToolbar","pl","sm","pr","xs","bgcolor","theme","palette","primary","main","action","activatedOpacity","flex","variant","title","DeleteIcon","_c2","EnhancedTable","_s","setOrder","useState","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","handleRequestSort","isAsc","handleSelectAllClick","target","newSelected","n","handleClick","selectedIndex","indexOf","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","handleChangeDense","isSelected","emptyRows","Math","max","visibleRows","useMemo","width","mb","minWidth","size","row","isItemSelected","labelId","hover","role","tabIndex","cursor","scope","style","height","colSpan","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","control","_c3","$RefreshReg$"],"sources":["D:/Task Management System/frontend/src/Components/Display.js"],"sourcesContent":["// import { useState,useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { useNavigate } from \"react-router-dom\"\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// const Display=()=>{\r\n\r\n//   const mynav=useNavigate()\r\n//   const[taskData,setTaskData]=useState([])\r\n\r\n\r\n\r\n//   const [currentPage,setCurrentPage]= useState(1);\r\n//   const recordsperPage=5;\r\n//   const lastIndex = currentPage * recordsperPage;\r\n//   const firstIndex= lastIndex - recordsperPage;\r\n//   const records= taskData.slice(firstIndex,lastIndex);\r\n//   const npage= Math.ceil(taskData.length / recordsperPage);\r\n\r\n//   const numbers= [...Array(npage + 1).keys()].slice(1);\r\n\r\n\r\n\r\n//   const prevPage=()=>{\r\n//     if(currentPage!== 1){\r\n//       setCurrentPage(currentPage-1);\r\n//     }\r\n//   }\r\n\r\n\r\n//   const nextPage=()=>{\r\n//     if(currentPage!== npage){\r\n//       setCurrentPage(currentPage+1);\r\n//     }\r\n//   }\r\n\r\n\r\n//   const changeCPage=(id)=>{\r\n//     setCurrentPage(id);\r\n//   }\r\n\r\n\r\n\r\n\r\n//   const loadData=()=>{\r\n//           axios.get(\"http://localhost:8000/task/Display\").then((res)=>{\r\n//           setTaskData(res.data)\r\n//           })\r\n//   }\r\n\r\n//       useEffect(()=>{\r\n//           loadData()\r\n//       },[])\r\n\r\n      \r\n\r\n//       const handleToggleStatus = async (id, status) => {\r\n//           try {\r\n//             const newStatus = status === 'pending' ? 'completed': 'pending';\r\n//             const updatedTodo = await axios.put(`http://localhost:8000/task/Display/${id}`, { status: newStatus });\r\n//             setTaskData(taskData.map(todo => (todo._id === id ? updatedTodo.data : todo)));\r\n//           } catch (error) {\r\n//             console.error(error);\r\n//           }\r\n//         };\r\n\r\n\r\n//         const del = (id) => {\r\n        \r\n//           const confirmDelete = window.confirm(\"Are you sure you want to delete this item?\");\r\n      \r\n          \r\n//           if (confirmDelete) {\r\n              \r\n//               const url = \"http://localhost:8000/task/Delete\";\r\n              \r\n              \r\n//               axios.post(url, { id: id })\r\n//                   .then((res) => {\r\n                      \r\n//                       loadData();\r\n//                   })\r\n//                   .catch((error) => {\r\n//                       console.error(\"Error deleting item:\", error);\r\n//                   });\r\n//           }\r\n//       };\r\n      \r\n      \r\n      \r\n//       const edit=(id)=>{\r\n      \r\n//           mynav(\"/edit/\"+id); \r\n      \r\n//       }    \r\n\r\n//         const descriptionHere = ( description,date, descriptiondetail ) => {\r\n//       mynav(`/Des/${description}/${date}/${descriptiondetail}`);\r\n//     };\r\n      \r\n\r\n//   const mydata=records.map((key, index) => {\r\n\r\n//     return(\r\n//       <>\r\n          \r\n          \r\n              \r\n//                     <tbody>\r\n//                       <tr>\r\n                        \r\n//                         <td> { key.title}</td>\r\n//                         <td  onClick={()=>descriptionHere(key.description, key.date, key.descriptiondetail)}>{key.description}</td>\r\n//                         <td> {key.date}</td>\r\n                      \r\n//                         <td> \r\n//                         <div style={{display:\"flex\"}} >\r\n//                          {key.status}\r\n//                           <button  onClick={() => handleToggleStatus(key._id, key.status)} class=\"button\" style={{\"--clr\": \"#00ad54\"}}>\r\n//                                   <span ></span>\r\n//                                   <div >\r\n//                                       <div >\r\n//                                       <i  ></i>\r\n//                                       </div>\r\n//                                       <span>Status</span>\r\n//                                   </div>\r\n//                               </button>\r\n//                           </div></td>\r\n//                       <td><button onClick={()=>{edit(key._id)}} ><i  style={{color: \"#000000\"}}></i></button></td>\r\n//                       <td><button onClick={()=>{del(key._id)}}><i  style={{color: \"#000000\"}}></i></button></td>\r\n                \r\n//                   </tr>\r\n                  \r\n//               </tbody>\r\n            \r\n      \r\n    \r\n//       </>\r\n//     )\r\n    \r\n//   })\r\n\r\n\r\n      \r\n\r\n//       return(\r\n//           <>\r\n//           <center>\r\n//             <h1  >Assigned Tasks</h1> </center>\r\n//             <div  >\r\n//                 <div  style={{width:\"80%\",margin:\"auto\"}}>\r\n                  \r\n//                         <table class=\"table\">\r\n//                             <thead style={{color:\"white\",backgroundColor:\"#212529\"}}>\r\n//                                 <tr>\r\n//                                 <th>Title</th>\r\n//                                 <th style={{width:\" 150px\",height: \"40px\"}}>description</th>\r\n//                                 <th>date</th>\r\n//                                 <th>status</th>\r\n//                                 <th>Edit</th>\r\n//                                 <th>Delete</th>\r\n//                                 </tr>\r\n//                             </thead>\r\n//                       {mydata}   \r\n//               </table>\r\n          \r\n\r\n//                       <nav>\r\n//                         <ul className=\"pagination\">\r\n//                             <li className=\"page-item\">\r\n//                                 <a href=\"#\" className=\"page-link\" onClick={prevPage}>Prev</a>\r\n//                             </li>\r\n//                             {\r\n//                               numbers.map((n,i)=>(\r\n//                                 <li className={`page-item ${currentPage===n ? 'active':''}`} key={i}>\r\n//                                     <a href=\"#\" className=\"page-link\" onClick={()=>{changeCPage(n)}} >{n}</a>\r\n//                                 </li>\r\n//                               ))\r\n//                             }\r\n//                             <li className=\"page-item\">\r\n//                                 <a href=\"#\" className=\"page-link\" onClick={nextPage}>Next</a>\r\n//                             </li>\r\n//                         </ul>\r\n//                       </nav>\r\n//               </div>\r\n//             </div>\r\n            \r\n//                   <div style={{margin:\"100px\",padding:\"20px\"}}> \r\n                          \r\n//                   </div>\r\n            \r\n           \r\n\r\n//   </> \r\n// )}       \r\n\r\n// export default Display;\r\n\r\n\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\n\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport { visuallyHidden } from '@mui/utils';\r\n\r\nfunction createData(id, name, calories, fat, carbs, protein) {\r\n  return {\r\n    id,\r\n    name,\r\n    calories,\r\n    fat,\r\n    carbs,\r\n    protein,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createData(1, 'Cupcake', 305, 3.7, 67, 4.3),\r\n  createData(2, 'Donut', 452, 25.0, 51, 4.9),\r\n  createData(3, 'Eclair', 262, 16.0, 24, 6.0),\r\n  createData(4, 'Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData(5, 'Gingerbread', 356, 16.0, 49, 3.9),\r\n  createData(6, 'Honeycomb', 408, 3.2, 87, 6.5),\r\n  createData(7, 'Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData(8, 'Jelly Bean', 375, 0.0, 94, 0.0),\r\n  createData(9, 'KitKat', 518, 26.0, 65, 7.0),\r\n  createData(10, 'Lollipop', 392, 0.2, 98, 0.0),\r\n  createData(11, 'Marshmallow', 318, 0, 81, 2.0),\r\n  createData(12, 'Nougat', 360, 19.0, 9, 37.0),\r\n  createData(13, 'Oreo', 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\n// Since 2020 all major browsers ensure sort stability with Array.prototype.sort().\r\n// stableSort() brings sort stability to non-modern browsers (notably IE11). If you\r\n// only support modern browsers you can replace stableSort(exampleArray, exampleComparator)\r\n// with exampleArray.slice().sort(exampleComparator)\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) {\r\n      return order;\r\n    }\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: 'name',\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Dessert (100g serving)',\r\n  },\r\n  {\r\n    id: 'calories',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Calories',\r\n  },\r\n  {\r\n    id: 'fat',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Fat (g)',\r\n  },\r\n  {\r\n    id: 'carbs',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Carbs (g)',\r\n  },\r\n  {\r\n    id: 'protein',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Protein (g)',\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } =\r\n    props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'select all desserts',\r\n            }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction EnhancedTableToolbar(props) {\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(numSelected > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\r\n        }),\r\n      }}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function EnhancedTable() {\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelected = rows.map((n) => n.id);\r\n      setSelected(newSelected);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n  const visibleRows = React.useMemo(\r\n    () =>\r\n      stableSort(rows, getComparator(order, orderBy)).slice(\r\n        page * rowsPerPage,\r\n        page * rowsPerPage + rowsPerPage,\r\n      ),\r\n    [order, orderBy, page, rowsPerPage],\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <Paper sx={{ width: '100%', mb: 2 }}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {visibleRows.map((row, index) => {\r\n                const isItemSelected = isSelected(row.id);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    onClick={(event) => handleClick(event, row.id)}\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    selected={isItemSelected}\r\n                    sx={{ cursor: 'pointer' }}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          'aria-labelledby': labelId,\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      id={labelId}\r\n                      scope=\"row\"\r\n                      padding=\"none\"\r\n                    >\r\n                      {row.name}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{row.calories}</TableCell>\r\n                    <TableCell align=\"right\">{row.fat}</TableCell>\r\n                    <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                    <TableCell align=\"right\">{row.protein}</TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {emptyRows > 0 && (\r\n                <TableRow\r\n                  style={{\r\n                    height: (dense ? 33 : 53) * emptyRows,\r\n                  }}\r\n                >\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;;AAGA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAGA;;AAEA;AACA;;AAIA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAIA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAIA;AACA;;AAEA;;AAGA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,KAAK,QAAQ,sBAAsB;AAC5C,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,MAAM,MAAM,sBAAsB;AAEzC,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,SAASC,cAAc,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,UAAUA,CAACC,EAAE,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,EAAEC,OAAO,EAAE;EAC3D,OAAO;IACLL,EAAE;IACFC,IAAI;IACJC,QAAQ;IACRC,GAAG;IACHC,KAAK;IACLC;EACF,CAAC;AACH;AAEA,MAAMC,IAAI,GAAG,CACXP,UAAU,CAAC,CAAC,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,EAC3CA,UAAU,CAAC,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,CAAC,EAC1CA,UAAU,CAAC,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,CAAC,EAC3CA,UAAU,CAAC,CAAC,EAAE,gBAAgB,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,EAClDA,UAAU,CAAC,CAAC,EAAE,aAAa,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,CAAC,EAChDA,UAAU,CAAC,CAAC,EAAE,WAAW,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,EAC7CA,UAAU,CAAC,CAAC,EAAE,oBAAoB,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,EACtDA,UAAU,CAAC,CAAC,EAAE,YAAY,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,EAC9CA,UAAU,CAAC,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,CAAC,EAC3CA,UAAU,CAAC,EAAE,EAAE,UAAU,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,EAC7CA,UAAU,CAAC,EAAE,EAAE,aAAa,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,EAC9CA,UAAU,CAAC,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,EAC5CA,UAAU,CAAC,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,CAAC,CAC3C;AAED,SAASQ,oBAAoBA,CAACC,CAAC,EAAEC,CAAC,EAAEC,OAAO,EAAE;EAC3C,IAAID,CAAC,CAACC,OAAO,CAAC,GAAGF,CAAC,CAACE,OAAO,CAAC,EAAE;IAC3B,OAAO,CAAC,CAAC;EACX;EACA,IAAID,CAAC,CAACC,OAAO,CAAC,GAAGF,CAAC,CAACE,OAAO,CAAC,EAAE;IAC3B,OAAO,CAAC;EACV;EACA,OAAO,CAAC;AACV;AAEA,SAASC,aAAaA,CAACC,KAAK,EAAEF,OAAO,EAAE;EACrC,OAAOE,KAAK,KAAK,MAAM,GACnB,CAACJ,CAAC,EAAEC,CAAC,KAAKF,oBAAoB,CAACC,CAAC,EAAEC,CAAC,EAAEC,OAAO,CAAC,GAC7C,CAACF,CAAC,EAAEC,CAAC,KAAK,CAACF,oBAAoB,CAACC,CAAC,EAAEC,CAAC,EAAEC,OAAO,CAAC;AACpD;;AAEA;AACA;AACA;AACA;AACA,SAASG,UAAUA,CAACC,KAAK,EAAEC,UAAU,EAAE;EACrC,MAAMC,cAAc,GAAGF,KAAK,CAACG,GAAG,CAAC,CAACC,EAAE,EAAEC,KAAK,KAAK,CAACD,EAAE,EAAEC,KAAK,CAAC,CAAC;EAC5DH,cAAc,CAACI,IAAI,CAAC,CAACZ,CAAC,EAAEC,CAAC,KAAK;IAC5B,MAAMG,KAAK,GAAGG,UAAU,CAACP,CAAC,CAAC,CAAC,CAAC,EAAEC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,IAAIG,KAAK,KAAK,CAAC,EAAE;MACf,OAAOA,KAAK;IACd;IACA,OAAOJ,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC;EACpB,CAAC,CAAC;EACF,OAAOO,cAAc,CAACC,GAAG,CAAEC,EAAE,IAAKA,EAAE,CAAC,CAAC,CAAC,CAAC;AAC1C;AAEA,MAAMG,SAAS,GAAG,CAChB;EACErB,EAAE,EAAE,MAAM;EACVsB,OAAO,EAAE,KAAK;EACdC,cAAc,EAAE,IAAI;EACpBC,KAAK,EAAE;AACT,CAAC,EACD;EACExB,EAAE,EAAE,UAAU;EACdsB,OAAO,EAAE,IAAI;EACbC,cAAc,EAAE,KAAK;EACrBC,KAAK,EAAE;AACT,CAAC,EACD;EACExB,EAAE,EAAE,KAAK;EACTsB,OAAO,EAAE,IAAI;EACbC,cAAc,EAAE,KAAK;EACrBC,KAAK,EAAE;AACT,CAAC,EACD;EACExB,EAAE,EAAE,OAAO;EACXsB,OAAO,EAAE,IAAI;EACbC,cAAc,EAAE,KAAK;EACrBC,KAAK,EAAE;AACT,CAAC,EACD;EACExB,EAAE,EAAE,SAAS;EACbsB,OAAO,EAAE,IAAI;EACbC,cAAc,EAAE,KAAK;EACrBC,KAAK,EAAE;AACT,CAAC,CACF;AAED,SAASC,iBAAiBA,CAACC,KAAK,EAAE;EAChC,MAAM;IAAEC,gBAAgB;IAAEf,KAAK;IAAEF,OAAO;IAAEkB,WAAW;IAAEC,QAAQ;IAAEC;EAAc,CAAC,GAC9EJ,KAAK;EACP,MAAMK,iBAAiB,GAAIC,QAAQ,IAAMC,KAAK,IAAK;IACjDH,aAAa,CAACG,KAAK,EAAED,QAAQ,CAAC;EAChC,CAAC;EAED,oBACElC,OAAA,CAACf,SAAS;IAAAmD,QAAA,eACRpC,OAAA,CAACb,QAAQ;MAAAiD,QAAA,gBACPpC,OAAA,CAACjB,SAAS;QAACsD,OAAO,EAAC,UAAU;QAAAD,QAAA,eAC3BpC,OAAA,CAACR,QAAQ;UACP8C,KAAK,EAAC,SAAS;UACfC,aAAa,EAAET,WAAW,GAAG,CAAC,IAAIA,WAAW,GAAGC,QAAS;UACzDS,OAAO,EAAET,QAAQ,GAAG,CAAC,IAAID,WAAW,KAAKC,QAAS;UAClDU,QAAQ,EAAEZ,gBAAiB;UAC3Ba,UAAU,EAAE;YACV,YAAY,EAAE;UAChB;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC,EACXvB,SAAS,CAACJ,GAAG,CAAE4B,QAAQ,iBACtB/C,OAAA,CAACjB,SAAS;QAERiE,KAAK,EAAED,QAAQ,CAACvB,OAAO,GAAG,OAAO,GAAG,MAAO;QAC3Ca,OAAO,EAAEU,QAAQ,CAACtB,cAAc,GAAG,MAAM,GAAG,QAAS;QACrDwB,aAAa,EAAErC,OAAO,KAAKmC,QAAQ,CAAC7C,EAAE,GAAGY,KAAK,GAAG,KAAM;QAAAsB,QAAA,eAEvDpC,OAAA,CAACZ,cAAc;UACb8D,MAAM,EAAEtC,OAAO,KAAKmC,QAAQ,CAAC7C,EAAG;UAChCiD,SAAS,EAAEvC,OAAO,KAAKmC,QAAQ,CAAC7C,EAAE,GAAGY,KAAK,GAAG,KAAM;UACnDsC,OAAO,EAAEnB,iBAAiB,CAACc,QAAQ,CAAC7C,EAAE,CAAE;UAAAkC,QAAA,GAEvCW,QAAQ,CAACrB,KAAK,EACdd,OAAO,KAAKmC,QAAQ,CAAC7C,EAAE,gBACtBF,OAAA,CAACpB,GAAG;YAACyE,SAAS,EAAC,MAAM;YAACC,EAAE,EAAExD,cAAe;YAAAsC,QAAA,EACtCtB,KAAK,KAAK,MAAM,GAAG,mBAAmB,GAAG;UAAkB;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzD,CAAC,GACJ,IAAI;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM;MAAC,GAhBZC,QAAQ,CAAC7C,EAAE;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiBP,CACZ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEhB;AAACS,EAAA,GA7CQ5B,iBAAiB;AA+C1BA,iBAAiB,CAAC6B,SAAS,GAAG;EAC5B1B,WAAW,EAAEpD,SAAS,CAAC+E,MAAM,CAACC,UAAU;EACxC1B,aAAa,EAAEtD,SAAS,CAACiF,IAAI,CAACD,UAAU;EACxC7B,gBAAgB,EAAEnD,SAAS,CAACiF,IAAI,CAACD,UAAU;EAC3C5C,KAAK,EAAEpC,SAAS,CAACkF,KAAK,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAACF,UAAU;EAClD9C,OAAO,EAAElC,SAAS,CAACmF,MAAM,CAACH,UAAU;EACpC3B,QAAQ,EAAErD,SAAS,CAAC+E,MAAM,CAACC;AAC7B,CAAC;AAED,SAASI,oBAAoBA,CAAClC,KAAK,EAAE;EACnC,MAAM;IAAEE;EAAY,CAAC,GAAGF,KAAK;EAE7B,oBACE5B,OAAA,CAACX,OAAO;IACNiE,EAAE,EAAE;MACFS,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAC;MACbC,EAAE,EAAE;QAAEC,EAAE,EAAE,CAAC;QAAEF,EAAE,EAAE;MAAE,CAAC;MACpB,IAAIlC,WAAW,GAAG,CAAC,IAAI;QACrBqC,OAAO,EAAGC,KAAK,IACbzF,KAAK,CAACyF,KAAK,CAACC,OAAO,CAACC,OAAO,CAACC,IAAI,EAAEH,KAAK,CAACC,OAAO,CAACG,MAAM,CAACC,gBAAgB;MAC3E,CAAC;IACH,CAAE;IAAArC,QAAA,GAEDN,WAAW,GAAG,CAAC,gBACd9B,OAAA,CAACV,UAAU;MACTgE,EAAE,EAAE;QAAEoB,IAAI,EAAE;MAAW,CAAE;MACzBpC,KAAK,EAAC,SAAS;MACfqC,OAAO,EAAC,WAAW;MACnBtB,SAAS,EAAC,KAAK;MAAAjB,QAAA,GAEdN,WAAW,EAAC,WACf;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,gBAEb9C,OAAA,CAACV,UAAU;MACTgE,EAAE,EAAE;QAAEoB,IAAI,EAAE;MAAW,CAAE;MACzBC,OAAO,EAAC,IAAI;MACZzE,EAAE,EAAC,YAAY;MACfmD,SAAS,EAAC,KAAK;MAAAjB,QAAA,EAChB;IAED;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CACb,EAEAhB,WAAW,GAAG,CAAC,gBACd9B,OAAA,CAACN,OAAO;MAACkF,KAAK,EAAC,QAAQ;MAAAxC,QAAA,eACrBpC,OAAA,CAACP,UAAU;QAAA2C,QAAA,eACTpC,OAAA,CAAC6E,UAAU;UAAAlC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,gBAEV9C,OAAA,CAACN,OAAO;MAACkF,KAAK,EAAC,aAAa;MAAAxC,QAAA,eAC1BpC,OAAA,CAACP,UAAU;QAAA2C,QAAA,eACTpC,OAAA,CAACH,cAAc;UAAA8C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACV;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEd;AAACgC,GAAA,GAjDQhB,oBAAoB;AAmD7BA,oBAAoB,CAACN,SAAS,GAAG;EAC/B1B,WAAW,EAAEpD,SAAS,CAAC+E,MAAM,CAACC;AAChC,CAAC;AAED,eAAe,SAASqB,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAAClE,KAAK,EAAEmE,QAAQ,CAAC,GAAGxG,KAAK,CAACyG,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACtE,OAAO,EAAEuE,UAAU,CAAC,GAAG1G,KAAK,CAACyG,QAAQ,CAAC,UAAU,CAAC;EACxD,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAG5G,KAAK,CAACyG,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAG9G,KAAK,CAACyG,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGhH,KAAK,CAACyG,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGlH,KAAK,CAACyG,QAAQ,CAAC,CAAC,CAAC;EAEvD,MAAMU,iBAAiB,GAAGA,CAACzD,KAAK,EAAED,QAAQ,KAAK;IAC7C,MAAM2D,KAAK,GAAGjF,OAAO,KAAKsB,QAAQ,IAAIpB,KAAK,KAAK,KAAK;IACrDmE,QAAQ,CAACY,KAAK,GAAG,MAAM,GAAG,KAAK,CAAC;IAChCV,UAAU,CAACjD,QAAQ,CAAC;EACtB,CAAC;EAED,MAAM4D,oBAAoB,GAAI3D,KAAK,IAAK;IACtC,IAAIA,KAAK,CAAC4D,MAAM,CAACvD,OAAO,EAAE;MACxB,MAAMwD,WAAW,GAAGxF,IAAI,CAACW,GAAG,CAAE8E,CAAC,IAAKA,CAAC,CAAC/F,EAAE,CAAC;MACzCmF,WAAW,CAACW,WAAW,CAAC;MACxB;IACF;IACAX,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,MAAMa,WAAW,GAAGA,CAAC/D,KAAK,EAAEjC,EAAE,KAAK;IACjC,MAAMiG,aAAa,GAAGf,QAAQ,CAACgB,OAAO,CAAClG,EAAE,CAAC;IAC1C,IAAI8F,WAAW,GAAG,EAAE;IAEpB,IAAIG,aAAa,KAAK,CAAC,CAAC,EAAE;MACxBH,WAAW,GAAGA,WAAW,CAACK,MAAM,CAACjB,QAAQ,EAAElF,EAAE,CAAC;IAChD,CAAC,MAAM,IAAIiG,aAAa,KAAK,CAAC,EAAE;MAC9BH,WAAW,GAAGA,WAAW,CAACK,MAAM,CAACjB,QAAQ,CAACkB,KAAK,CAAC,CAAC,CAAC,CAAC;IACrD,CAAC,MAAM,IAAIH,aAAa,KAAKf,QAAQ,CAACmB,MAAM,GAAG,CAAC,EAAE;MAChDP,WAAW,GAAGA,WAAW,CAACK,MAAM,CAACjB,QAAQ,CAACkB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACzD,CAAC,MAAM,IAAIH,aAAa,GAAG,CAAC,EAAE;MAC5BH,WAAW,GAAGA,WAAW,CAACK,MAAM,CAC9BjB,QAAQ,CAACkB,KAAK,CAAC,CAAC,EAAEH,aAAa,CAAC,EAChCf,QAAQ,CAACkB,KAAK,CAACH,aAAa,GAAG,CAAC,CAClC,CAAC;IACH;IACAd,WAAW,CAACW,WAAW,CAAC;EAC1B,CAAC;EAED,MAAMQ,gBAAgB,GAAGA,CAACrE,KAAK,EAAEsE,OAAO,KAAK;IAC3ClB,OAAO,CAACkB,OAAO,CAAC;EAClB,CAAC;EAED,MAAMC,uBAAuB,GAAIvE,KAAK,IAAK;IACzCwD,cAAc,CAACgB,QAAQ,CAACxE,KAAK,CAAC4D,MAAM,CAACa,KAAK,EAAE,EAAE,CAAC,CAAC;IAChDrB,OAAO,CAAC,CAAC,CAAC;EACZ,CAAC;EAED,MAAMsB,iBAAiB,GAAI1E,KAAK,IAAK;IACnCsD,QAAQ,CAACtD,KAAK,CAAC4D,MAAM,CAACvD,OAAO,CAAC;EAChC,CAAC;EAED,MAAMsE,UAAU,GAAI5G,EAAE,IAAKkF,QAAQ,CAACgB,OAAO,CAAClG,EAAE,CAAC,KAAK,CAAC,CAAC;;EAEtD;EACA,MAAM6G,SAAS,GACbzB,IAAI,GAAG,CAAC,GAAG0B,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG3B,IAAI,IAAII,WAAW,GAAGlF,IAAI,CAAC+F,MAAM,CAAC,GAAG,CAAC;EAEpE,MAAMW,WAAW,GAAGzI,KAAK,CAAC0I,OAAO,CAC/B,MACEpG,UAAU,CAACP,IAAI,EAAEK,aAAa,CAACC,KAAK,EAAEF,OAAO,CAAC,CAAC,CAAC0F,KAAK,CACnDhB,IAAI,GAAGI,WAAW,EAClBJ,IAAI,GAAGI,WAAW,GAAGA,WACvB,CAAC,EACH,CAAC5E,KAAK,EAAEF,OAAO,EAAE0E,IAAI,EAAEI,WAAW,CACpC,CAAC;EAED,oBACE1F,OAAA,CAACpB,GAAG;IAAC0E,EAAE,EAAE;MAAE8D,KAAK,EAAE;IAAO,CAAE;IAAAhF,QAAA,gBACzBpC,OAAA,CAACT,KAAK;MAAC+D,EAAE,EAAE;QAAE8D,KAAK,EAAE,MAAM;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAjF,QAAA,gBAClCpC,OAAA,CAAC8D,oBAAoB;QAAChC,WAAW,EAAEsD,QAAQ,CAACmB;MAAO;QAAA5D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtD9C,OAAA,CAAChB,cAAc;QAAAoD,QAAA,eACbpC,OAAA,CAACnB,KAAK;UACJyE,EAAE,EAAE;YAAEgE,QAAQ,EAAE;UAAI,CAAE;UACtB,mBAAgB,YAAY;UAC5BC,IAAI,EAAE/B,KAAK,GAAG,OAAO,GAAG,QAAS;UAAApD,QAAA,gBAEjCpC,OAAA,CAAC2B,iBAAiB;YAChBG,WAAW,EAAEsD,QAAQ,CAACmB,MAAO;YAC7BzF,KAAK,EAAEA,KAAM;YACbF,OAAO,EAAEA,OAAQ;YACjBiB,gBAAgB,EAAEiE,oBAAqB;YACvC9D,aAAa,EAAE4D,iBAAkB;YACjC7D,QAAQ,EAAEvB,IAAI,CAAC+F;UAAO;YAAA5D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC,eACF9C,OAAA,CAAClB,SAAS;YAAAsD,QAAA,GACP8E,WAAW,CAAC/F,GAAG,CAAC,CAACqG,GAAG,EAAEnG,KAAK,KAAK;cAC/B,MAAMoG,cAAc,GAAGX,UAAU,CAACU,GAAG,CAACtH,EAAE,CAAC;cACzC,MAAMwH,OAAO,GAAI,2BAA0BrG,KAAM,EAAC;cAElD,oBACErB,OAAA,CAACb,QAAQ;gBACPwI,KAAK;gBACLvE,OAAO,EAAGjB,KAAK,IAAK+D,WAAW,CAAC/D,KAAK,EAAEqF,GAAG,CAACtH,EAAE,CAAE;gBAC/C0H,IAAI,EAAC,UAAU;gBACf,gBAAcH,cAAe;gBAC7BI,QAAQ,EAAE,CAAC,CAAE;gBAEbzC,QAAQ,EAAEqC,cAAe;gBACzBnE,EAAE,EAAE;kBAAEwE,MAAM,EAAE;gBAAU,CAAE;gBAAA1F,QAAA,gBAE1BpC,OAAA,CAACjB,SAAS;kBAACsD,OAAO,EAAC,UAAU;kBAAAD,QAAA,eAC3BpC,OAAA,CAACR,QAAQ;oBACP8C,KAAK,EAAC,SAAS;oBACfE,OAAO,EAAEiF,cAAe;oBACxB/E,UAAU,EAAE;sBACV,iBAAiB,EAAEgF;oBACrB;kBAAE;oBAAA/E,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACO,CAAC,eACZ9C,OAAA,CAACjB,SAAS;kBACRsE,SAAS,EAAC,IAAI;kBACdnD,EAAE,EAAEwH,OAAQ;kBACZK,KAAK,EAAC,KAAK;kBACX1F,OAAO,EAAC,MAAM;kBAAAD,QAAA,EAEboF,GAAG,CAACrH;gBAAI;kBAAAwC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACA,CAAC,eACZ9C,OAAA,CAACjB,SAAS;kBAACiE,KAAK,EAAC,OAAO;kBAAAZ,QAAA,EAAEoF,GAAG,CAACpH;gBAAQ;kBAAAuC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACnD9C,OAAA,CAACjB,SAAS;kBAACiE,KAAK,EAAC,OAAO;kBAAAZ,QAAA,EAAEoF,GAAG,CAACnH;gBAAG;kBAAAsC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eAC9C9C,OAAA,CAACjB,SAAS;kBAACiE,KAAK,EAAC,OAAO;kBAAAZ,QAAA,EAAEoF,GAAG,CAAClH;gBAAK;kBAAAqC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eAChD9C,OAAA,CAACjB,SAAS;kBAACiE,KAAK,EAAC,OAAO;kBAAAZ,QAAA,EAAEoF,GAAG,CAACjH;gBAAO;kBAAAoC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC;cAAA,GAxB7C0E,GAAG,CAACtH,EAAE;gBAAAyC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAyBH,CAAC;YAEf,CAAC,CAAC,EACDiE,SAAS,GAAG,CAAC,iBACZ/G,OAAA,CAACb,QAAQ;cACP6I,KAAK,EAAE;gBACLC,MAAM,EAAE,CAACzC,KAAK,GAAG,EAAE,GAAG,EAAE,IAAIuB;cAC9B,CAAE;cAAA3E,QAAA,eAEFpC,OAAA,CAACjB,SAAS;gBAACmJ,OAAO,EAAE;cAAE;gBAAAvF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjB,CACX;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CAAC,eACjB9C,OAAA,CAACd,eAAe;QACdiJ,kBAAkB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAE;QAChC9E,SAAS,EAAC,KAAK;QACf+E,KAAK,EAAE5H,IAAI,CAAC+F,MAAO;QACnBb,WAAW,EAAEA,WAAY;QACzBJ,IAAI,EAAEA,IAAK;QACX+C,YAAY,EAAE7B,gBAAiB;QAC/B8B,mBAAmB,EAAE5B;MAAwB;QAAA/D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACR9C,OAAA,CAACL,gBAAgB;MACf4I,OAAO,eAAEvI,OAAA,CAACJ,MAAM;QAAC4C,OAAO,EAAEgD,KAAM;QAAC/C,QAAQ,EAAEoE;MAAkB;QAAAlE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAE;MACjEpB,KAAK,EAAC;IAAe;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACkC,EAAA,CA5JuBD,aAAa;AAAAyD,GAAA,GAAbzD,aAAa;AAAA,IAAAxB,EAAA,EAAAuB,GAAA,EAAA0D,GAAA;AAAAC,YAAA,CAAAlF,EAAA;AAAAkF,YAAA,CAAA3D,GAAA;AAAA2D,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}