{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task Management System\\\\frontend\\\\src\\\\Components\\\\Display.js\",\n  _s = $RefreshSig$();\n// import { useState,useEffect } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\"\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// const Display=()=>{\n\n//   const mynav=useNavigate()\n//   const[taskData,setTaskData]=useState([])\n\n//   const [currentPage,setCurrentPage]= useState(1);\n//   const recordsperPage=5;\n//   const lastIndex = currentPage * recordsperPage;\n//   const firstIndex= lastIndex - recordsperPage;\n//   const records= taskData.slice(firstIndex,lastIndex);\n//   const npage= Math.ceil(taskData.length / recordsperPage);\n\n//   const numbers= [...Array(npage + 1).keys()].slice(1);\n\n//   const prevPage=()=>{\n//     if(currentPage!== 1){\n//       setCurrentPage(currentPage-1);\n//     }\n//   }\n\n//   const nextPage=()=>{\n//     if(currentPage!== npage){\n//       setCurrentPage(currentPage+1);\n//     }\n//   }\n\n//   const changeCPage=(id)=>{\n//     setCurrentPage(id);\n//   }\n\n//   const loadData=()=>{\n//           axios.get(\"http://localhost:8000/task/Display\").then((res)=>{\n//           setTaskData(res.data)\n//           })\n//   }\n\n//       useEffect(()=>{\n//           loadData()\n//       },[])\n\n//       const handleToggleStatus = async (id, status) => {\n//           try {\n//             const newStatus = status === 'pending' ? 'completed': 'pending';\n//             const updatedTodo = await axios.put(`http://localhost:8000/task/Display/${id}`, { status: newStatus });\n//             setTaskData(taskData.map(todo => (todo._id === id ? updatedTodo.data : todo)));\n//           } catch (error) {\n//             console.error(error);\n//           }\n//         };\n\n//         const del = (id) => {\n\n//           const confirmDelete = window.confirm(\"Are you sure you want to delete this item?\");\n\n//           if (confirmDelete) {\n\n//               const url = \"http://localhost:8000/task/Delete\";\n\n//               axios.post(url, { id: id })\n//                   .then((res) => {\n\n//                       loadData();\n//                   })\n//                   .catch((error) => {\n//                       console.error(\"Error deleting item:\", error);\n//                   });\n//           }\n//       };\n\n//       const edit=(id)=>{\n\n//           mynav(\"/edit/\"+id); \n\n//       }    \n\n//         const descriptionHere = ( description,date, descriptiondetail ) => {\n//       mynav(`/Des/${description}/${date}/${descriptiondetail}`);\n//     };\n\n//  \n\n//       </>\n//     )\n\n//   })\n\n//       return(\n//           <>\n//           <center>\n//             <h1  >Assigned Tasks</h1> </center>\n//             <div  >\n//                 <div  style={{width:\"80%\",margin:\"auto\"}}>\n\n//                 <table class=\"table\">\n//                    <thead style={{color:\"white\",backgroundColor:\"#212529\"}}>\n//                                 <tr>\n//                                 <th>Title</th>\n//                         <th style={{width:\" 150px\",height: \"40px\"}}>description</th>\n//                                 <th>date</th>\n//                                 <th>status</th>\n//                                 <th>Edit</th>\n//                                 <th>Delete</th>\n//                                 </tr>\n//                             </thead>\n//                       {mydata}   \n//               </table>\n\n//                       <nav>\n//                         <ul className=\"pagination\">\n//                             <li className=\"page-item\">\n//                                 <a href=\"#\" className=\"page-link\" onClick={prevPage}>Prev</a>\n//                             </li>\n//                             {\n//                               numbers.map((n,i)=>(\n//                                 <li className={`page-item ${currentPage===n ? 'active':''}`} key={i}>\n//                                     <a href=\"#\" className=\"page-link\" onClick={()=>{changeCPage(n)}} >{n}</a>\n//                                 </li>\n//                               ))\n//                             }\n//                             <li className=\"page-item\">\n//                                 <a href=\"#\" className=\"page-link\" onClick={nextPage}>Next</a>\n//                             </li>\n//                         </ul>\n//                       </nav>\n//               </div>\n//             </div>\n\n//                   <div style={{margin:\"100px\",padding:\"20px\"}}> \n\n//                   </div>\n\n//   </> \n// )}       \n\n// export default Display;\n\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'title',\n  label: 'title',\n  minWidth: 170\n}, {\n  id: 'description',\n  label: 'description',\n  minWidth: 100\n}, {\n  id: 'date',\n  label: 'date',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'status',\n  label: 'status',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'edit',\n  label: 'edit',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toFixed(2)\n}, {\n  id: 'Delete',\n  label: 'Delete',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toFixed(2)\n}];\nfunction createData(title, date, status, Delete, description, edit) {\n  return {\n    title,\n    date,\n    status,\n    description,\n    edit,\n    Delete\n  };\n}\nconst mydata = records.map((key, index) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\" \", key.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          onClick: () => descriptionHere(key.description, key.date, key.descriptiondetail),\n          children: key.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\" \", key.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [key.status, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleToggleStatus(key._id, key.status),\n              class: \"button\",\n              style: {\n                \"--clr\": \"#00ad54\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              edit(key._id);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              style: {\n                color: \"#000000\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 68\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              del(key._id);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              style: {\n                color: \"#000000\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 66\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n});\nexport default function ColumnGroupingTable() {\n  _s();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      sx: {\n        maxHeight: 440\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              style: {\n                top: 57,\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: columns.map(column => {\n                const value = row[column.id];\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  children: column.format && typeof value === 'number' ? column.format(value) : value\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 25\n                }, this);\n              })\n            }, row.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [5, 25, 100],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n}\n_s(ColumnGroupingTable, \"65nbIEELuFY2eeUXbED/8VsHrEQ=\");\n_c = ColumnGroupingTable;\nvar _c;\n$RefreshReg$(_c, \"ColumnGroupingTable\");","map":{"version":3,"names":["React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","jsxDEV","_jsxDEV","Fragment","_Fragment","columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","createData","title","date","status","Delete","description","edit","mydata","records","map","key","index","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","descriptionHere","descriptiondetail","style","display","handleToggleStatus","_id","class","color","del","ColumnGroupingTable","_s","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","sx","width","maxHeight","stickyHeader","column","top","rows","slice","row","hover","role","tabIndex","code","rowsPerPageOptions","component","count","length","onPageChange","onRowsPerPageChange","_c","$RefreshReg$"],"sources":["D:/Task Management System/frontend/src/Components/Display.js"],"sourcesContent":["// import { useState,useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { useNavigate } from \"react-router-dom\"\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// const Display=()=>{\r\n\r\n//   const mynav=useNavigate()\r\n//   const[taskData,setTaskData]=useState([])\r\n\r\n\r\n\r\n//   const [currentPage,setCurrentPage]= useState(1);\r\n//   const recordsperPage=5;\r\n//   const lastIndex = currentPage * recordsperPage;\r\n//   const firstIndex= lastIndex - recordsperPage;\r\n//   const records= taskData.slice(firstIndex,lastIndex);\r\n//   const npage= Math.ceil(taskData.length / recordsperPage);\r\n\r\n//   const numbers= [...Array(npage + 1).keys()].slice(1);\r\n\r\n\r\n\r\n//   const prevPage=()=>{\r\n//     if(currentPage!== 1){\r\n//       setCurrentPage(currentPage-1);\r\n//     }\r\n//   }\r\n\r\n\r\n//   const nextPage=()=>{\r\n//     if(currentPage!== npage){\r\n//       setCurrentPage(currentPage+1);\r\n//     }\r\n//   }\r\n\r\n\r\n//   const changeCPage=(id)=>{\r\n//     setCurrentPage(id);\r\n//   }\r\n\r\n\r\n\r\n\r\n//   const loadData=()=>{\r\n//           axios.get(\"http://localhost:8000/task/Display\").then((res)=>{\r\n//           setTaskData(res.data)\r\n//           })\r\n//   }\r\n\r\n//       useEffect(()=>{\r\n//           loadData()\r\n//       },[])\r\n\r\n      \r\n\r\n//       const handleToggleStatus = async (id, status) => {\r\n//           try {\r\n//             const newStatus = status === 'pending' ? 'completed': 'pending';\r\n//             const updatedTodo = await axios.put(`http://localhost:8000/task/Display/${id}`, { status: newStatus });\r\n//             setTaskData(taskData.map(todo => (todo._id === id ? updatedTodo.data : todo)));\r\n//           } catch (error) {\r\n//             console.error(error);\r\n//           }\r\n//         };\r\n\r\n\r\n//         const del = (id) => {\r\n        \r\n//           const confirmDelete = window.confirm(\"Are you sure you want to delete this item?\");\r\n      \r\n          \r\n//           if (confirmDelete) {\r\n              \r\n//               const url = \"http://localhost:8000/task/Delete\";\r\n              \r\n              \r\n//               axios.post(url, { id: id })\r\n//                   .then((res) => {\r\n                      \r\n//                       loadData();\r\n//                   })\r\n//                   .catch((error) => {\r\n//                       console.error(\"Error deleting item:\", error);\r\n//                   });\r\n//           }\r\n//       };\r\n      \r\n      \r\n      \r\n//       const edit=(id)=>{\r\n      \r\n//           mynav(\"/edit/\"+id); \r\n      \r\n//       }    \r\n\r\n//         const descriptionHere = ( description,date, descriptiondetail ) => {\r\n//       mynav(`/Des/${description}/${date}/${descriptiondetail}`);\r\n//     };\r\n      \r\n\r\n//  \r\n    \r\n//       </>\r\n//     )\r\n    \r\n//   })\r\n\r\n\r\n      \r\n\r\n//       return(\r\n//           <>\r\n//           <center>\r\n//             <h1  >Assigned Tasks</h1> </center>\r\n//             <div  >\r\n//                 <div  style={{width:\"80%\",margin:\"auto\"}}>\r\n                  \r\n//                 <table class=\"table\">\r\n//                    <thead style={{color:\"white\",backgroundColor:\"#212529\"}}>\r\n//                                 <tr>\r\n//                                 <th>Title</th>\r\n//                         <th style={{width:\" 150px\",height: \"40px\"}}>description</th>\r\n//                                 <th>date</th>\r\n//                                 <th>status</th>\r\n//                                 <th>Edit</th>\r\n//                                 <th>Delete</th>\r\n//                                 </tr>\r\n//                             </thead>\r\n//                       {mydata}   \r\n//               </table>\r\n          \r\n\r\n//                       <nav>\r\n//                         <ul className=\"pagination\">\r\n//                             <li className=\"page-item\">\r\n//                                 <a href=\"#\" className=\"page-link\" onClick={prevPage}>Prev</a>\r\n//                             </li>\r\n//                             {\r\n//                               numbers.map((n,i)=>(\r\n//                                 <li className={`page-item ${currentPage===n ? 'active':''}`} key={i}>\r\n//                                     <a href=\"#\" className=\"page-link\" onClick={()=>{changeCPage(n)}} >{n}</a>\r\n//                                 </li>\r\n//                               ))\r\n//                             }\r\n//                             <li className=\"page-item\">\r\n//                                 <a href=\"#\" className=\"page-link\" onClick={nextPage}>Next</a>\r\n//                             </li>\r\n//                         </ul>\r\n//                       </nav>\r\n//               </div>\r\n//             </div>\r\n            \r\n//                   <div style={{margin:\"100px\",padding:\"20px\"}}> \r\n                          \r\n//                   </div>\r\n            \r\n           \r\n\r\n//   </> \r\n// )}       \r\n\r\n// export default Display;\r\n\r\n\r\nimport * as React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\nconst columns = [\r\n  { id: 'title', label: 'title', minWidth: 170 },\r\n  { id: 'description', label: 'description', minWidth: 100 },\r\n  {\r\n    id: 'date',\r\n    label: 'date',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'status',\r\n    label: 'status',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'edit',\r\n    label: 'edit',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n\r\n  {\r\n    id: 'Delete',\r\n    label: 'Delete',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nfunction createData(title,date,status,Delete,description,edit) {\r\n \r\n  return { title,date,status,description,edit,Delete };\r\n}\r\nconst mydata=records.map((key, index) => {\r\n\r\n      return(\r\n<>\r\n\r\n\r\n\r\n          <tbody>\r\n                        <tr>\r\n                          \r\n                          <td> { key.title}</td>\r\n                          <td  onClick={()=>descriptionHere(key.description, key.date, key.descriptiondetail)}>{key.description}</td>\r\n                          <td> {key.date}</td>\r\n                        \r\n                          <td> \r\n                          <div style={{display:\"flex\"}} >\r\n                           {key.status}\r\n                            <button  onClick={() => handleToggleStatus(key._id, key.status)} class=\"button\" style={{\"--clr\": \"#00ad54\"}}>\r\n                                    <span ></span>\r\n                                    <div >\r\n                                        <div >\r\n                                        <i  ></i>\r\n                                        </div>\r\n                                        <span>Status</span>\r\n                                    </div>\r\n                                </button>\r\n                            </div></td>\r\n                        <td><button onClick={()=>{edit(key._id)}} ><i  style={{color: \"#000000\"}}></i></button></td>\r\n                        <td><button onClick={()=>{del(key._id)}}><i  style={{color: \"#000000\"}}></i></button></td>\r\n                  \r\n                    </tr>\r\n                    \r\n                </tbody>\r\n              \r\n        \r\n\r\n\r\n</>\r\n      )})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function ColumnGroupingTable() {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ width: '100%' }}>\r\n      <TableContainer sx={{ maxHeight: 440 }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n         \r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ top: 57, minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === 'number'\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}