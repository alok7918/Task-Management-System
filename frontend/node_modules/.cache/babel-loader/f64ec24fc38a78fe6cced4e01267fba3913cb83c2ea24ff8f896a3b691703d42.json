{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task Management System\\\\frontend\\\\src\\\\Components\\\\priorList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Prioritylist = () => {\n  _s();\n  const [taskData, setTaskData] = useState([]);\n  const loadData = () => {\n    axios.get(\"http://localhost:8000/task/Display\").then(res => {\n      setTaskData(res.data);\n    });\n  };\n  useEffect(() => {\n    loadData();\n  }, []);\n  const [draggedItem, setDraggedItem] = useState(null);\n  const handleDragStart = (event, task) => {\n    setDraggedItem(task);\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const handleDrop = (event, targetPriority) => {\n    event.preventDefault();\n    if (!draggedItem) return;\n    const updatedTasks = [...taskData];\n    const draggedItemIndex = taskData.findIndex(task => task === draggedItem);\n    const targetPriorityTasks = taskData.filter(task => task.priority === targetPriority);\n    const targetPriorityIndex = taskData.findIndex(task => task.priority === targetPriority);\n\n    // Remove dragged item from its original position\n    updatedTasks.splice(draggedItemIndex, 1);\n\n    // Insert dragged item at the correct index within the new priority\n    updatedTasks.splice(targetPriorityIndex, 0, draggedItem);\n    setTaskData(updatedTasks);\n    setDraggedItem(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"priority\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prioritybox\",\n      onDragOver: event => handleDragOver(event),\n      onDrop: event => handleDrop(event, \"High\"),\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"High Priority\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), taskData.map((task, index) => {\n        if (task.priority === \"High\") {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            draggable: true,\n            onDragStart: event => handleDragStart(event, task),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this);\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prioritybox\",\n      onDragOver: event => handleDragOver(event),\n      onDrop: event => handleDrop(event, \"Medium\"),\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Medium Priority\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), taskData.map((task, index) => {\n        if (task.priority === \"Medium\") {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            draggable: true,\n            onDragStart: event => handleDragStart(event, task),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this);\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prioritybox\",\n      onDragOver: event => handleDragOver(event),\n      onDrop: event => handleDrop(event, \"Low\"),\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Low Priority\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), taskData.map((task, index) => {\n        if (task.priority === \"Low\") {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            draggable: true,\n            onDragStart: event => handleDragStart(event, task),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this);\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Prioritylist, \"lIwpf6ZF5D709hpt0EqY5cPGAYE=\");\n_c = Prioritylist;\nexport default Prioritylist;\nvar _c;\n$RefreshReg$(_c, \"Prioritylist\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","Prioritylist","_s","taskData","setTaskData","loadData","get","then","res","data","draggedItem","setDraggedItem","handleDragStart","event","task","handleDragOver","preventDefault","handleDrop","targetPriority","updatedTasks","draggedItemIndex","findIndex","targetPriorityTasks","filter","priority","targetPriorityIndex","splice","className","children","onDragOver","onDrop","fileName","_jsxFileName","lineNumber","columnNumber","map","index","draggable","onDragStart","title","description","id","_c","$RefreshReg$"],"sources":["D:/Task Management System/frontend/src/Components/priorList.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Prioritylist = () => {\r\n  const [taskData, setTaskData] = useState([]);\r\n\r\n  const loadData = () => {\r\n    axios.get(\"http://localhost:8000/task/Display\").then((res) => {\r\n      setTaskData(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  const [draggedItem, setDraggedItem] = useState(null);\r\n\r\n  const handleDragStart = (event, task) => {\r\n    setDraggedItem(task);\r\n  };\r\n\r\n  const handleDragOver = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleDrop = (event, targetPriority) => {\r\n    event.preventDefault();\r\n    if (!draggedItem) return;\r\n  \r\n    const updatedTasks = [...taskData];\r\n    const draggedItemIndex = taskData.findIndex((task) => task === draggedItem);\r\n    const targetPriorityTasks = taskData.filter((task) => task.priority === targetPriority);\r\n    const targetPriorityIndex = taskData.findIndex((task) => task.priority === targetPriority);\r\n  \r\n    // Remove dragged item from its original position\r\n    updatedTasks.splice(draggedItemIndex, 1);\r\n  \r\n    // Insert dragged item at the correct index within the new priority\r\n    updatedTasks.splice(targetPriorityIndex, 0, draggedItem);\r\n  \r\n    setTaskData(updatedTasks);\r\n    setDraggedItem(null);\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"priority\">\r\n      <div\r\n        className=\"prioritybox\"\r\n        onDragOver={(event) => handleDragOver(event)}\r\n        onDrop={(event) => handleDrop(event, \"High\")}\r\n      >\r\n        <h1>High Priority</h1>\r\n        {taskData.map((task, index) => {\r\n          if (task.priority === \"High\") {\r\n            return (\r\n              <div\r\n                key={task.id}\r\n                draggable\r\n                onDragStart={(event) => handleDragStart(event, task)}\r\n              >\r\n                <span>{task.title}</span>\r\n                <span>{task.description}</span>\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n      <div\r\n        className=\"prioritybox\"\r\n        onDragOver={(event) => handleDragOver(event)}\r\n        onDrop={(event) => handleDrop(event, \"Medium\")}\r\n      >\r\n        <h1>Medium Priority</h1>\r\n        {taskData.map((task, index) => {\r\n          if (task.priority === \"Medium\") {\r\n            return (\r\n              <div\r\n                key={task.id}\r\n                draggable\r\n                onDragStart={(event) => handleDragStart(event, task)}\r\n              >\r\n                <span>{task.title}</span>\r\n                <span>{task.description}</span>\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n      <div\r\n        className=\"prioritybox\"\r\n        onDragOver={(event) => handleDragOver(event)}\r\n        onDrop={(event) => handleDrop(event, \"Low\")}\r\n      >\r\n        <h1>Low Priority</h1>\r\n        {taskData.map((task, index) => {\r\n          if (task.priority === \"Low\") {\r\n            return (\r\n              <div\r\n                key={task.id}\r\n                draggable\r\n                onDragStart={(event) => handleDragStart(event, task)}\r\n              >\r\n                <span>{task.title}</span>\r\n                <span>{task.description}</span>\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Prioritylist;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}