{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task Management System\\\\frontend\\\\src\\\\Components\\\\Popup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Popup.css'; // Import CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Popup() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const openPopup = () => {\n    setIsOpen(true);\n  };\n  const closePopup = () => {\n    setIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openPopup,\n      children: \"Open Popup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close-btn\",\n          onClick: closePopup,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close-btn\",\n          onClick: closePopup,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"This is a Popup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Hello! This is some sample popup content.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(Popup, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = Popup;\nexport default Popup;\nvar _c;\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Popup","_s","isOpen","setIsOpen","openPopup","closePopup","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["D:/Task Management System/frontend/src/Components/Popup.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Popup.css'; // Import CSS file for styling\r\n\r\nfunction Popup() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const openPopup = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const closePopup = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={openPopup}>Open Popup</button>\r\n\r\n      {/* Conditional rendering for the popup */}\r\n      {isOpen && (\r\n        <div className=\"popup-container\">\r\n          <div className=\"popup-box\">\r\n          <span className=\"close-btn\" onClick={closePopup}>&times;</span>\r\n            <span className=\"close-btn\" onClick={closePopup}>&times;</span>\r\n            <h2>This is a Popup</h2>\r\n            <p>Hello! This is some sample popup content.</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Popup;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMO,SAAS,GAAGA,CAAA,KAAM;IACtBD,SAAS,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,MAAME,UAAU,GAAGA,CAAA,KAAM;IACvBF,SAAS,CAAC,KAAK,CAAC;EAClB,CAAC;EAED,oBACEJ,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAQQ,OAAO,EAAEH,SAAU;MAAAE,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAG9CT,MAAM,iBACLH,OAAA;MAAKa,SAAS,EAAC,iBAAiB;MAAAN,QAAA,eAC9BP,OAAA;QAAKa,SAAS,EAAC,WAAW;QAAAN,QAAA,gBAC1BP,OAAA;UAAMa,SAAS,EAAC,WAAW;UAACL,OAAO,EAAEF,UAAW;UAAAC,QAAA,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC7DZ,OAAA;UAAMa,SAAS,EAAC,WAAW;UAACL,OAAO,EAAEF,UAAW;UAAAC,QAAA,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC/DZ,OAAA;UAAAO,QAAA,EAAI;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBZ,OAAA;UAAAO,QAAA,EAAG;QAAyC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACV,EAAA,CA5BQD,KAAK;AAAAa,EAAA,GAALb,KAAK;AA8Bd,eAAeA,KAAK;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}